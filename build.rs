use std::env;
use std::fs::{OpenOptions};
use std::io::{Write};
use std::path::{PathBuf};

fn main() {
  println!("cargo:rerun-if-changed=build.rs");
  println!("cargo:rerun-if-env-changed=TARGET");
  let out_dir = PathBuf::from(env::var("OUT_DIR").unwrap());
  let target = env::var("TARGET").unwrap();
  let mut output = String::new();
  output.push_str("/* automatically generated by build script */\n");
  output.push_str("pub const TARGET: &'static str = \"");
  for c in target.escape_default() {
    output.push(c);
  }
  output.push_str("\";\n");
  let mut output_path = out_dir;
  output_path.push("build_env.rs");
  let mut output_file = OpenOptions::new()
    .write(true).create(true).truncate(true)
    .open(output_path).unwrap();
  output_file.write_all(output.as_bytes()).unwrap();
}
